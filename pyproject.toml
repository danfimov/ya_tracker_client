[project]
name = "ya_tracker_client"
version = "0.0.3"
description = "Async Yandex Tracker Client"
authors = [
    { name = "Дмитрий Анфимов", email = "work@danfimov.ru" },

]
license = { text = "MIT License" }
keywords = [
    "Yandex",
    "Tracker",
    "API",
    "async",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Framework :: AsyncIO",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Typing :: Typed",
]
readme = "README.md"
requires-python=">=3.10,<=3.13"
dependencies = [
    "aiohttp>=3.8.5",
    "pydantic>= 1.10.12",
    "certifi>=2023.7.22",
    "requests>=2.31.0",
]

[project.urls]
"Bug Tracker" = "https://github.com/danfimov/ya_tracker_client/issues"
"Repository" = "https://github.com/danfimov/ya_tracker_client/"

[dependency-groups]
dev = [
    "pytest>=7.4.2",
    "coverage>=7.3.1",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "ruff>=0.9.7",
    "polyfactory>=2.19.0",
    "gevent>=23.9.1",
    "pre-commit>=3.4.0",
    "python-dotenv>=1.0.0",
    "vcrpy>=7.0.0",
]

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["ya_tracker_client*"]
exclude = ["examples", "tests", "assets"]

[tool.pytest]
python_files = "test_*.py"
python_classes = ["*Test", "Test*"]
python_functions = "test_*"
testpaths = "tests/"

[tool.coverage.report]
exclude_lines = [
    "# pragma: no cover",
    "def __repr__",
    "def __str__",
    "def __unicode__",
]
show_missing = true
skip_empty = true
omit = [
  "*/__init__.py",
]

[tool.coverage.html]
directory = "pytest-cov-report"

[tool.coverage.run]
branch = true
concurrency = ['gevent']

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = ["-p no:pastebin", "-p no:nose", "-p no:doctest"]

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["W", "E", "F", "Q", "B", "I", "N", "ASYNC", "G", "RUF", "COM", "C90"]
ignore = []

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "single"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.isort]
known-local-folder = ["ya_tacker_client"]
lines-after-imports = 2
